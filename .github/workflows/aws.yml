name: Docker Image Deployment

on:
  push:
    branches:
      - main

env:
  AWS_REGION: us-east-1                  # Defina isso para a sua região AWS preferida, por exemplo, us-west-1
  ECR_REPOSITORY: plank-datalake         # Defina isso para o nome do seu repositório Amazon ECR

jobs:
  deploy:
    name: Build and Deploy Image
    runs-on: ubuntu-latest
    environment: production

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v3

    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1
    
    - name: Set Image Tag
      run: echo "IMAGE_TAG=${GITHUB_REF#refs/heads/}-${{ github.run_id }}" >> $GITHUB_ENV

    - name: Build, tag, and push image to Amazon ECR
      id: build-image
      env:
        ECR_REGISTRY: 121253776145.dkr.ecr.us-east-1.amazonaws.com
      run: |
        # Build a docker container and
        # push it to ECR so that it can
        # be deployed to ECS.
        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
        echo "image=$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG" >> $GITHUB_OUTPUT

    - name: Update ECS service
      env:
        CLUSTER_NAME: ${{ secrets.CLUSTER_NAME }}
        SERVICE_NAME: ${{ secrets.SERVICE_NAME }}
        CONTAINER_NAME: ${{ secrets.CONTAINER_NAME }}
        ECR_REGISTRY: 121253776145.dkr.ecr.us-east-1.amazonaws.com
        ECR_REPOSITORY: plank-datalake
        IMAGE_TAG: ${{ env.IMAGE_TAG }}
        AWS_REGION: ${{ env.AWS_REGION }}
      run: |
        aws ecs update-service --cluster $CLUSTER_NAME --service $SERVICE_NAME --force-new-deployment --region $AWS_REGION
